{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "d0df6b76-1779-45a8-8021-19c0cb476f0c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-29T05:57:43.074082Z",
     "iopub.status.busy": "2025-10-29T05:57:43.073766Z",
     "iopub.status.idle": "2025-10-29T05:57:43.367378Z",
     "shell.execute_reply": "2025-10-29T05:57:43.366534Z",
     "shell.execute_reply.started": "2025-10-29T05:57:43.074058Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Region: us-east-1\n",
      "Bucket: sagemaker-us-east-1-XXXXXXXXXXXX\n",
      "Role: arn:aws:iam::XXXXXXXXXXXX:role/service-role/AmazonSageMaker-ExecutionRole-20250923T104318\n"
     ]
    }
   ],
   "source": [
    "import sagemaker\n",
    "import pandas as pd\n",
    "import io\n",
    "from time import gmtime, strftime, sleep\n",
    "import datetime\n",
    "import random\n",
    "import time\n",
    "import boto3\n",
    "from sagemaker.feature_store.feature_group import FeatureGroup\n",
    "\n",
    "role = sagemaker.get_execution_role()\n",
    "sess = sagemaker.Session()\n",
    "region = sess.boto_region_name\n",
    "bucket = sess.default_bucket()\n",
    "\n",
    "account_id = role.split(':')[4]\n",
    "\n",
    "def mask_account(text):\n",
    "    return str(text).replace(account_id, 'XXXXXXXXXXXX')\n",
    "\n",
    "print(f\"Region: {region}\")\n",
    "print(f\"Bucket: {mask_account(bucket)}\")\n",
    "print(f\"Role: {mask_account(role)}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "a49eee19-b5ec-4ba2-9e78-e89cd9c9cdaf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-29T05:57:44.458741Z",
     "iopub.status.busy": "2025-10-29T05:57:44.458336Z",
     "iopub.status.idle": "2025-10-29T05:57:44.771919Z",
     "shell.execute_reply": "2025-10-29T05:57:44.771063Z",
     "shell.execute_reply.started": "2025-10-29T05:57:44.458719Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Total records: 398\n",
      "Unique car_name: 305\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mpg</th>\n",
       "      <th>cylinders</th>\n",
       "      <th>displacement</th>\n",
       "      <th>horsepower</th>\n",
       "      <th>weight</th>\n",
       "      <th>acceleration</th>\n",
       "      <th>model_year</th>\n",
       "      <th>origin</th>\n",
       "      <th>car_name</th>\n",
       "      <th>release_date</th>\n",
       "      <th>event_time</th>\n",
       "      <th>metadata_0</th>\n",
       "      <th>metadata_1</th>\n",
       "      <th>metadata_2</th>\n",
       "      <th>metadata_3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>18.0</td>\n",
       "      <td>8</td>\n",
       "      <td>307.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>3504.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>chevrolet chevelle malibu</td>\n",
       "      <td>17939869.0</td>\n",
       "      <td>49475869.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>15.0</td>\n",
       "      <td>8</td>\n",
       "      <td>350.0</td>\n",
       "      <td>165.0</td>\n",
       "      <td>3693.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>buick skylark 320</td>\n",
       "      <td>26781963.0</td>\n",
       "      <td>58317963.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>18.0</td>\n",
       "      <td>8</td>\n",
       "      <td>318.0</td>\n",
       "      <td>150.0</td>\n",
       "      <td>3436.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>plymouth satellite</td>\n",
       "      <td>22621092.0</td>\n",
       "      <td>54157092.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>16.0</td>\n",
       "      <td>8</td>\n",
       "      <td>304.0</td>\n",
       "      <td>150.0</td>\n",
       "      <td>3433.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>amc rebel sst</td>\n",
       "      <td>1477552.0</td>\n",
       "      <td>33013552.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>17.0</td>\n",
       "      <td>8</td>\n",
       "      <td>302.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>3449.0</td>\n",
       "      <td>10.5</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>ford torino</td>\n",
       "      <td>15691379.0</td>\n",
       "      <td>47227379.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    mpg  cylinders  displacement  horsepower  weight  acceleration  \\\n",
       "0  18.0          8         307.0       130.0  3504.0          12.0   \n",
       "1  15.0          8         350.0       165.0  3693.0          11.5   \n",
       "2  18.0          8         318.0       150.0  3436.0          11.0   \n",
       "3  16.0          8         304.0       150.0  3433.0          12.0   \n",
       "4  17.0          8         302.0       140.0  3449.0          10.5   \n",
       "\n",
       "   model_year  origin                   car_name  release_date  event_time  \\\n",
       "0          70       1  chevrolet chevelle malibu    17939869.0  49475869.0   \n",
       "1          70       1          buick skylark 320    26781963.0  58317963.0   \n",
       "2          70       1         plymouth satellite    22621092.0  54157092.0   \n",
       "3          70       1              amc rebel sst     1477552.0  33013552.0   \n",
       "4          70       1                ford torino    15691379.0  47227379.0   \n",
       "\n",
       "  metadata_0 metadata_1 metadata_2 metadata_3  \n",
       "0      empty      empty      empty      empty  \n",
       "1      empty      empty      empty      empty  \n",
       "2      empty      empty      empty      empty  \n",
       "3      empty      empty      empty      empty  \n",
       "4      empty      empty      empty      empty  "
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def random_datetime(yr: int) -> float:\n",
    "    delta = datetime.timedelta(\n",
    "        days=random.randint(0, 364),\n",
    "        hours=random.randint(0, 23),\n",
    "        minutes=random.randint(0, 59),\n",
    "        seconds=random.randint(0, 59)\n",
    "    )\n",
    "    return (datetime.datetime(1900 + int(yr), 1, 1) + delta).timestamp()\n",
    "\n",
    "data_url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/auto-mpg.data'\n",
    "col_names = ['mpg','cylinders','displacement','horsepower','weight','acceleration','model_year','origin','car_name']\n",
    "\n",
    "df = pd.read_csv(data_url, sep=r'\\s+', header=None, names=col_names, na_values='?')\n",
    "\n",
    "df[\"car_name\"] = df[\"car_name\"].astype('string')\n",
    "df[\"release_date\"] = df[\"model_year\"].apply(random_datetime)\n",
    "df[\"event_time\"] = df[\"release_date\"].apply(lambda ts: (datetime.datetime.fromtimestamp(ts) + datetime.timedelta(days=365)).timestamp())\n",
    "df[\"metadata_0\"] = pd.Series([\"empty\"] * len(df), dtype=\"string\")\n",
    "df[\"metadata_1\"] = pd.Series([\"empty\"] * len(df), dtype=\"string\")\n",
    "df[\"metadata_2\"] = pd.Series([\"empty\"] * len(df), dtype=\"string\")\n",
    "df[\"metadata_3\"] = pd.Series([\"empty\"] * len(df), dtype=\"string\")\n",
    "\n",
    "print(f\"Total records: {len(df)}\")\n",
    "print(f\"Unique car_name: {df['car_name'].nunique()}\")\n",
    "\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "ed1ee793-3394-4376-a8b6-b0cd936b7652",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-29T05:57:46.328287Z",
     "iopub.status.busy": "2025-10-29T05:57:46.328009Z",
     "iopub.status.idle": "2025-10-29T05:58:07.806714Z",
     "shell.execute_reply": "2025-10-29T05:58:07.805801Z",
     "shell.execute_reply.started": "2025-10-29T05:57:46.328266Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Feature group name: poc-1761717466\n",
      "Current status: Creating\n",
      "Waiting for Feature Group to be Created\n",
      "Waiting for Feature Group to be Created\n",
      "Waiting for Feature Group to be Created\n",
      "Waiting for Feature Group to be Created\n",
      "FeatureGroup poc-1761717466 successfully created.\n",
      "S3 Location: s3://sagemaker-us-east-1-XXXXXXXXXXXX/poc-1761717466/XXXXXXXXXXXX/sagemaker/us-east-1/offline-store/poc-1761717466-1761717466/data\n"
     ]
    }
   ],
   "source": [
    "def check_feature_group_status(feature_group):\n",
    "    status = feature_group.describe().get(\"FeatureGroupStatus\")\n",
    "    print(f'Current status: {status}')\n",
    "    while status == \"Creating\":\n",
    "        print(\"Waiting for Feature Group to be Created\")\n",
    "        time.sleep(5)\n",
    "        status = feature_group.describe().get(\"FeatureGroupStatus\")\n",
    "    print(f\"FeatureGroup {feature_group.name} successfully created.\")\n",
    "\n",
    "feature_group_name = f'poc-{int(time.time())}'\n",
    "print(f'Feature group name: {feature_group_name}')\n",
    "\n",
    "feature_group = FeatureGroup(name=feature_group_name, sagemaker_session=sess)\n",
    "feature_group.load_feature_definitions(data_frame=df)\n",
    "feature_group.create(\n",
    "    s3_uri=f's3://{bucket}/{feature_group_name}',\n",
    "    enable_online_store=True,\n",
    "    record_identifier_name='car_name',\n",
    "    event_time_feature_name='event_time',\n",
    "    description='This feature group tracks the vehicle information such as mpg, and horsepower between 1970 and 1982.',\n",
    "    role_arn=role\n",
    ")\n",
    "\n",
    "check_feature_group_status(feature_group)\n",
    "\n",
    "fg_details = feature_group.describe()\n",
    "s3_location = fg_details['OfflineStoreConfig']['S3StorageConfig']['ResolvedOutputS3Uri']\n",
    "print(f\"S3 Location: {mask_account(s3_location)}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "4b36ce39-3ecc-4486-8e64-88f4c27f248d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-29T05:58:23.604392Z",
     "iopub.status.busy": "2025-10-29T05:58:23.604112Z",
     "iopub.status.idle": "2025-10-29T05:58:26.257594Z",
     "shell.execute_reply": "2025-10-29T05:58:26.256407Z",
     "shell.execute_reply.started": "2025-10-29T05:58:23.604369Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Ingesting data...\n",
      "Ingestion completed in 2.65 seconds\n"
     ]
    }
   ],
   "source": [
    "print(\"Ingesting data...\")\n",
    "ingestion_start = time.time()\n",
    "\n",
    "feature_group.ingest(\n",
    "    data_frame=df,\n",
    "    max_workers=3,\n",
    "    wait=True\n",
    ")\n",
    "\n",
    "ingestion_duration = time.time() - ingestion_start\n",
    "print(f\"Ingestion completed in {ingestion_duration:.2f} seconds\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "768be5c6-d87e-47ac-968f-8980941f34cc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-29T05:58:29.273544Z",
     "iopub.status.busy": "2025-10-29T05:58:29.273248Z",
     "iopub.status.idle": "2025-10-29T06:04:00.140600Z",
     "shell.execute_reply": "2025-10-29T06:04:00.139865Z",
     "shell.execute_reply.started": "2025-10-29T05:58:29.273520Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Waiting for S3 data...\n",
      "Bucket: sagemaker-us-east-1-XXXXXXXXXXXX\n",
      "Prefix: poc-1761717466/XXXXXXXXXXXX/sagemaker/us-east-1/offline-store/poc-1761717466-1761717466/data\n",
      "[0s] Parquet files: 0\n",
      "[30s] Parquet files: 0\n",
      "[60s] Parquet files: 0\n",
      "[90s] Parquet files: 0\n",
      "[120s] Parquet files: 0\n",
      "[150s] Parquet files: 0\n",
      "[180s] Parquet files: 0\n",
      "[210s] Parquet files: 0\n",
      "[240s] Parquet files: 0\n",
      "[270s] Parquet files: 0\n",
      "[300s] Parquet files: 0\n",
      "[330s] Parquet files: 370\n",
      "Data written to S3: 370 files, 1.35 MB\n"
     ]
    }
   ],
   "source": [
    "s3_client = boto3.client('s3', region_name=region)\n",
    "bucket_name = s3_location.split('/')[2]\n",
    "prefix = '/'.join(s3_location.split('/')[3:])\n",
    "\n",
    "print(\"Waiting for S3 data...\")\n",
    "print(f\"Bucket: {mask_account(bucket_name)}\")\n",
    "print(f\"Prefix: {mask_account(prefix)}\")\n",
    "\n",
    "max_wait = 900\n",
    "check_interval = 30\n",
    "elapsed = 0\n",
    "parquet_files = []\n",
    "\n",
    "while elapsed < max_wait:\n",
    "    paginator = s3_client.get_paginator('list_objects_v2')\n",
    "    all_objects = []\n",
    "    \n",
    "    for page in paginator.paginate(Bucket=bucket_name, Prefix=prefix):\n",
    "        if 'Contents' in page:\n",
    "            all_objects.extend(page['Contents'])\n",
    "    \n",
    "    parquet_files = [obj for obj in all_objects if obj['Key'].endswith('.parquet')]\n",
    "    \n",
    "    print(f\"[{elapsed}s] Parquet files: {len(parquet_files)}\")\n",
    "    \n",
    "    if len(parquet_files) > 0:\n",
    "        total_size = sum(obj['Size'] for obj in parquet_files)\n",
    "        print(f\"Data written to S3: {len(parquet_files)} files, {total_size / (1024*1024):.2f} MB\")\n",
    "        break\n",
    "    \n",
    "    time.sleep(check_interval)\n",
    "    elapsed += check_interval\n",
    "\n",
    "if len(parquet_files) == 0:\n",
    "    print(f\"No parquet files after {max_wait}s\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "1127be72-f5cb-429b-b3d0-d2586a0b73c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-29T06:04:12.815194Z",
     "iopub.status.busy": "2025-10-29T06:04:12.814932Z",
     "iopub.status.idle": "2025-10-29T06:04:15.568366Z",
     "shell.execute_reply": "2025-10-29T06:04:15.567561Z",
     "shell.execute_reply.started": "2025-10-29T06:04:12.815174Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Checking online store for all unique cars...\n",
      "Online store: 305/305 found\n"
     ]
    }
   ],
   "source": [
    "featurestore_runtime = sess.boto_session.client(service_name='sagemaker-featurestore-runtime', region_name=region)\n",
    "\n",
    "print(\"Checking online store for all unique cars...\")\n",
    "\n",
    "unique_cars = df['car_name'].unique()\n",
    "online_found = 0\n",
    "online_not_found = 0\n",
    "online_not_found_list = []\n",
    "\n",
    "for record in unique_cars:\n",
    "    try:\n",
    "        response = featurestore_runtime.get_record(\n",
    "            FeatureGroupName=feature_group_name,\n",
    "            RecordIdentifierValueAsString=record\n",
    "        )\n",
    "        online_found += 1\n",
    "    except Exception as e:\n",
    "        online_not_found += 1\n",
    "        online_not_found_list.append(record)\n",
    "\n",
    "print(f\"Online store: {online_found}/{len(unique_cars)} found\")\n",
    "\n",
    "if online_not_found > 0:\n",
    "    print(f\"\\nNot found in online store:\")\n",
    "    for car in online_not_found_list:\n",
    "        print(f\"  - {car}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "27e09ef7-59d3-445e-bb88-16ed04b1e15f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-29T06:04:18.528349Z",
     "iopub.status.busy": "2025-10-29T06:04:18.528072Z",
     "iopub.status.idle": "2025-10-29T06:04:24.168038Z",
     "shell.execute_reply": "2025-10-29T06:04:24.167179Z",
     "shell.execute_reply.started": "2025-10-29T06:04:18.528327Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Querying all records from offline store...\n",
      "Total records in offline store: 398\n",
      "Unique cars in offline store: 289\n",
      "Expected: 398 records, 305 unique cars\n",
      "\n",
      "Missing 16 cars in offline store:\n",
      "  - oldsmobile cutlass supreme\n",
      "    Original: mpg=17.0, cyl=8.0, year=77.0\n",
      "  - buick century limited\n",
      "    Original: mpg=25.0, cyl=6.0, year=82.0\n",
      "  - chevrolet bel air\n",
      "    Original: mpg=15.0, cyl=8.0, year=75.0\n",
      "  - dodge d200\n",
      "    Original: mpg=11.0, cyl=8.0, year=70.0\n",
      "  - ford f108\n",
      "    Original: mpg=13.0, cyl=8.0, year=76.0\n",
      "  - mercury capri v6\n",
      "    Original: mpg=21.0, cyl=6.0, year=73.0\n",
      "  - ford thunderbird\n",
      "    Original: mpg=16.0, cyl=8.0, year=77.0\n",
      "  - renault lecar deluxe\n",
      "    Original: mpg=40.9, cyl=4.0, year=80.0\n",
      "  - plymouth champ\n",
      "    Original: mpg=39.0, cyl=4.0, year=81.0\n",
      "  - cadillac seville\n",
      "    Original: mpg=16.5, cyl=8.0, year=76.0\n",
      "  - ford pinto runabout\n",
      "    Original: mpg=21.0, cyl=4.0, year=72.0\n",
      "  - plymouth satellite custom\n",
      "    Original: mpg=16.0, cyl=6.0, year=71.0\n",
      "  - dodge monaco (sw)\n",
      "    Original: mpg=12.0, cyl=8.0, year=71.0\n",
      "  - amc ambassador brougham\n",
      "    Original: mpg=13.0, cyl=8.0, year=73.0\n",
      "  - honda accord cvcc\n",
      "    Original: mpg=31.5, cyl=4.0, year=77.0\n",
      "  - dodge aspen se\n",
      "    Original: mpg=20.0, cyl=6.0, year=76.0\n",
      "\n",
      "Original dataframe:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mpg</th>\n",
       "      <th>cylinders</th>\n",
       "      <th>displacement</th>\n",
       "      <th>horsepower</th>\n",
       "      <th>weight</th>\n",
       "      <th>acceleration</th>\n",
       "      <th>model_year</th>\n",
       "      <th>origin</th>\n",
       "      <th>car_name</th>\n",
       "      <th>release_date</th>\n",
       "      <th>event_time</th>\n",
       "      <th>metadata_0</th>\n",
       "      <th>metadata_1</th>\n",
       "      <th>metadata_2</th>\n",
       "      <th>metadata_3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>18.0</td>\n",
       "      <td>8</td>\n",
       "      <td>307.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>3504.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>chevrolet chevelle malibu</td>\n",
       "      <td>17939869.0</td>\n",
       "      <td>49475869.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>15.0</td>\n",
       "      <td>8</td>\n",
       "      <td>350.0</td>\n",
       "      <td>165.0</td>\n",
       "      <td>3693.0</td>\n",
       "      <td>11.5</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>buick skylark 320</td>\n",
       "      <td>26781963.0</td>\n",
       "      <td>58317963.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>18.0</td>\n",
       "      <td>8</td>\n",
       "      <td>318.0</td>\n",
       "      <td>150.0</td>\n",
       "      <td>3436.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>plymouth satellite</td>\n",
       "      <td>22621092.0</td>\n",
       "      <td>54157092.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>16.0</td>\n",
       "      <td>8</td>\n",
       "      <td>304.0</td>\n",
       "      <td>150.0</td>\n",
       "      <td>3433.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>amc rebel sst</td>\n",
       "      <td>1477552.0</td>\n",
       "      <td>33013552.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>17.0</td>\n",
       "      <td>8</td>\n",
       "      <td>302.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>3449.0</td>\n",
       "      <td>10.5</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>ford torino</td>\n",
       "      <td>15691379.0</td>\n",
       "      <td>47227379.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>393</th>\n",
       "      <td>27.0</td>\n",
       "      <td>4</td>\n",
       "      <td>140.0</td>\n",
       "      <td>86.0</td>\n",
       "      <td>2790.0</td>\n",
       "      <td>15.6</td>\n",
       "      <td>82</td>\n",
       "      <td>1</td>\n",
       "      <td>ford mustang gl</td>\n",
       "      <td>405871350.0</td>\n",
       "      <td>437407350.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>394</th>\n",
       "      <td>44.0</td>\n",
       "      <td>4</td>\n",
       "      <td>97.0</td>\n",
       "      <td>52.0</td>\n",
       "      <td>2130.0</td>\n",
       "      <td>24.6</td>\n",
       "      <td>82</td>\n",
       "      <td>2</td>\n",
       "      <td>vw pickup</td>\n",
       "      <td>397065556.0</td>\n",
       "      <td>428601556.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395</th>\n",
       "      <td>32.0</td>\n",
       "      <td>4</td>\n",
       "      <td>135.0</td>\n",
       "      <td>84.0</td>\n",
       "      <td>2295.0</td>\n",
       "      <td>11.6</td>\n",
       "      <td>82</td>\n",
       "      <td>1</td>\n",
       "      <td>dodge rampage</td>\n",
       "      <td>385215253.0</td>\n",
       "      <td>416751253.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>396</th>\n",
       "      <td>28.0</td>\n",
       "      <td>4</td>\n",
       "      <td>120.0</td>\n",
       "      <td>79.0</td>\n",
       "      <td>2625.0</td>\n",
       "      <td>18.6</td>\n",
       "      <td>82</td>\n",
       "      <td>1</td>\n",
       "      <td>ford ranger</td>\n",
       "      <td>390038944.0</td>\n",
       "      <td>421574944.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>397</th>\n",
       "      <td>31.0</td>\n",
       "      <td>4</td>\n",
       "      <td>119.0</td>\n",
       "      <td>82.0</td>\n",
       "      <td>2720.0</td>\n",
       "      <td>19.4</td>\n",
       "      <td>82</td>\n",
       "      <td>1</td>\n",
       "      <td>chevy s-10</td>\n",
       "      <td>406749593.0</td>\n",
       "      <td>438285593.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>398 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      mpg  cylinders  displacement  horsepower  weight  acceleration  \\\n",
       "0    18.0          8         307.0       130.0  3504.0          12.0   \n",
       "1    15.0          8         350.0       165.0  3693.0          11.5   \n",
       "2    18.0          8         318.0       150.0  3436.0          11.0   \n",
       "3    16.0          8         304.0       150.0  3433.0          12.0   \n",
       "4    17.0          8         302.0       140.0  3449.0          10.5   \n",
       "..    ...        ...           ...         ...     ...           ...   \n",
       "393  27.0          4         140.0        86.0  2790.0          15.6   \n",
       "394  44.0          4          97.0        52.0  2130.0          24.6   \n",
       "395  32.0          4         135.0        84.0  2295.0          11.6   \n",
       "396  28.0          4         120.0        79.0  2625.0          18.6   \n",
       "397  31.0          4         119.0        82.0  2720.0          19.4   \n",
       "\n",
       "     model_year  origin                   car_name  release_date   event_time  \\\n",
       "0            70       1  chevrolet chevelle malibu    17939869.0   49475869.0   \n",
       "1            70       1          buick skylark 320    26781963.0   58317963.0   \n",
       "2            70       1         plymouth satellite    22621092.0   54157092.0   \n",
       "3            70       1              amc rebel sst     1477552.0   33013552.0   \n",
       "4            70       1                ford torino    15691379.0   47227379.0   \n",
       "..          ...     ...                        ...           ...          ...   \n",
       "393          82       1            ford mustang gl   405871350.0  437407350.0   \n",
       "394          82       2                  vw pickup   397065556.0  428601556.0   \n",
       "395          82       1              dodge rampage   385215253.0  416751253.0   \n",
       "396          82       1                ford ranger   390038944.0  421574944.0   \n",
       "397          82       1                 chevy s-10   406749593.0  438285593.0   \n",
       "\n",
       "    metadata_0 metadata_1 metadata_2 metadata_3  \n",
       "0        empty      empty      empty      empty  \n",
       "1        empty      empty      empty      empty  \n",
       "2        empty      empty      empty      empty  \n",
       "3        empty      empty      empty      empty  \n",
       "4        empty      empty      empty      empty  \n",
       "..         ...        ...        ...        ...  \n",
       "393      empty      empty      empty      empty  \n",
       "394      empty      empty      empty      empty  \n",
       "395      empty      empty      empty      empty  \n",
       "396      empty      empty      empty      empty  \n",
       "397      empty      empty      empty      empty  \n",
       "\n",
       "[398 rows x 15 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Offline store dataframe:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>mpg</th>\n",
       "      <th>cylinders</th>\n",
       "      <th>displacement</th>\n",
       "      <th>horsepower</th>\n",
       "      <th>weight</th>\n",
       "      <th>acceleration</th>\n",
       "      <th>model_year</th>\n",
       "      <th>origin</th>\n",
       "      <th>car_name</th>\n",
       "      <th>release_date</th>\n",
       "      <th>event_time</th>\n",
       "      <th>metadata_0</th>\n",
       "      <th>metadata_1</th>\n",
       "      <th>metadata_2</th>\n",
       "      <th>metadata_3</th>\n",
       "      <th>write_time</th>\n",
       "      <th>api_invocation_time</th>\n",
       "      <th>is_deleted</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>29.8</td>\n",
       "      <td>4</td>\n",
       "      <td>134.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>2711.0</td>\n",
       "      <td>15.5</td>\n",
       "      <td>80</td>\n",
       "      <td>3</td>\n",
       "      <td>toyota corona liftback</td>\n",
       "      <td>326895468.0</td>\n",
       "      <td>358431468.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>2025-10-29 06:03:59.617</td>\n",
       "      <td>2025-10-29 05:58:25.000</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>15.5</td>\n",
       "      <td>8</td>\n",
       "      <td>350.0</td>\n",
       "      <td>170.0</td>\n",
       "      <td>4165.0</td>\n",
       "      <td>11.4</td>\n",
       "      <td>77</td>\n",
       "      <td>1</td>\n",
       "      <td>chevrolet monte carlo landau</td>\n",
       "      <td>243973826.0</td>\n",
       "      <td>275509826.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>2025-10-29 06:03:59.637</td>\n",
       "      <td>2025-10-29 05:58:25.000</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>23.9</td>\n",
       "      <td>8</td>\n",
       "      <td>260.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>3420.0</td>\n",
       "      <td>22.2</td>\n",
       "      <td>79</td>\n",
       "      <td>1</td>\n",
       "      <td>oldsmobile cutlass salon brougham</td>\n",
       "      <td>295351959.0</td>\n",
       "      <td>326887959.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>2025-10-29 06:03:59.584</td>\n",
       "      <td>2025-10-29 05:58:24.000</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>27.0</td>\n",
       "      <td>4</td>\n",
       "      <td>151.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>2735.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>82</td>\n",
       "      <td>1</td>\n",
       "      <td>pontiac phoenix</td>\n",
       "      <td>383292540.0</td>\n",
       "      <td>414828540.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>2025-10-29 06:03:59.606</td>\n",
       "      <td>2025-10-29 05:58:25.000</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>35.0</td>\n",
       "      <td>4</td>\n",
       "      <td>72.0</td>\n",
       "      <td>69.0</td>\n",
       "      <td>1613.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>71</td>\n",
       "      <td>3</td>\n",
       "      <td>datsun 1200</td>\n",
       "      <td>49502871.0</td>\n",
       "      <td>81038871.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>2025-10-29 06:03:59.577</td>\n",
       "      <td>2025-10-29 05:58:25.000</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>393</th>\n",
       "      <td>15.0</td>\n",
       "      <td>8</td>\n",
       "      <td>318.0</td>\n",
       "      <td>150.0</td>\n",
       "      <td>3399.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>73</td>\n",
       "      <td>1</td>\n",
       "      <td>dodge dart custom</td>\n",
       "      <td>113708521.0</td>\n",
       "      <td>145244521.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>2025-10-29 06:04:00.722</td>\n",
       "      <td>2025-10-29 05:58:26.000</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>394</th>\n",
       "      <td>22.0</td>\n",
       "      <td>4</td>\n",
       "      <td>121.0</td>\n",
       "      <td>98.0</td>\n",
       "      <td>2945.0</td>\n",
       "      <td>14.5</td>\n",
       "      <td>75</td>\n",
       "      <td>2</td>\n",
       "      <td>volvo 244dl</td>\n",
       "      <td>183305984.0</td>\n",
       "      <td>214841984.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>2025-10-29 06:03:59.576</td>\n",
       "      <td>2025-10-29 05:58:25.000</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>395</th>\n",
       "      <td>28.0</td>\n",
       "      <td>4</td>\n",
       "      <td>90.0</td>\n",
       "      <td>75.0</td>\n",
       "      <td>2125.0</td>\n",
       "      <td>14.5</td>\n",
       "      <td>74</td>\n",
       "      <td>1</td>\n",
       "      <td>dodge colt</td>\n",
       "      <td>143389205.0</td>\n",
       "      <td>174925205.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>2025-10-29 06:03:59.584</td>\n",
       "      <td>2025-10-29 05:58:24.000</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>396</th>\n",
       "      <td>33.7</td>\n",
       "      <td>4</td>\n",
       "      <td>107.0</td>\n",
       "      <td>75.0</td>\n",
       "      <td>2210.0</td>\n",
       "      <td>14.4</td>\n",
       "      <td>81</td>\n",
       "      <td>3</td>\n",
       "      <td>honda prelude</td>\n",
       "      <td>377670707.0</td>\n",
       "      <td>409206707.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>2025-10-29 06:03:59.645</td>\n",
       "      <td>2025-10-29 05:58:25.000</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>397</th>\n",
       "      <td>14.0</td>\n",
       "      <td>8</td>\n",
       "      <td>340.0</td>\n",
       "      <td>160.0</td>\n",
       "      <td>3609.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>70</td>\n",
       "      <td>1</td>\n",
       "      <td>plymouth 'cuda 340</td>\n",
       "      <td>21075789.0</td>\n",
       "      <td>52611789.0</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>empty</td>\n",
       "      <td>2025-10-29 06:03:59.606</td>\n",
       "      <td>2025-10-29 05:58:24.000</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>398 rows × 18 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      mpg  cylinders  displacement  horsepower  weight  acceleration  \\\n",
       "0    29.8          4         134.0        90.0  2711.0          15.5   \n",
       "1    15.5          8         350.0       170.0  4165.0          11.4   \n",
       "2    23.9          8         260.0        90.0  3420.0          22.2   \n",
       "3    27.0          4         151.0        90.0  2735.0          18.0   \n",
       "4    35.0          4          72.0        69.0  1613.0          18.0   \n",
       "..    ...        ...           ...         ...     ...           ...   \n",
       "393  15.0          8         318.0       150.0  3399.0          11.0   \n",
       "394  22.0          4         121.0        98.0  2945.0          14.5   \n",
       "395  28.0          4          90.0        75.0  2125.0          14.5   \n",
       "396  33.7          4         107.0        75.0  2210.0          14.4   \n",
       "397  14.0          8         340.0       160.0  3609.0           8.0   \n",
       "\n",
       "     model_year  origin                           car_name  release_date  \\\n",
       "0            80       3             toyota corona liftback   326895468.0   \n",
       "1            77       1       chevrolet monte carlo landau   243973826.0   \n",
       "2            79       1  oldsmobile cutlass salon brougham   295351959.0   \n",
       "3            82       1                    pontiac phoenix   383292540.0   \n",
       "4            71       3                        datsun 1200    49502871.0   \n",
       "..          ...     ...                                ...           ...   \n",
       "393          73       1                  dodge dart custom   113708521.0   \n",
       "394          75       2                        volvo 244dl   183305984.0   \n",
       "395          74       1                         dodge colt   143389205.0   \n",
       "396          81       3                      honda prelude   377670707.0   \n",
       "397          70       1                 plymouth 'cuda 340    21075789.0   \n",
       "\n",
       "      event_time metadata_0 metadata_1 metadata_2 metadata_3  \\\n",
       "0    358431468.0      empty      empty      empty      empty   \n",
       "1    275509826.0      empty      empty      empty      empty   \n",
       "2    326887959.0      empty      empty      empty      empty   \n",
       "3    414828540.0      empty      empty      empty      empty   \n",
       "4     81038871.0      empty      empty      empty      empty   \n",
       "..           ...        ...        ...        ...        ...   \n",
       "393  145244521.0      empty      empty      empty      empty   \n",
       "394  214841984.0      empty      empty      empty      empty   \n",
       "395  174925205.0      empty      empty      empty      empty   \n",
       "396  409206707.0      empty      empty      empty      empty   \n",
       "397   52611789.0      empty      empty      empty      empty   \n",
       "\n",
       "                  write_time      api_invocation_time  is_deleted  \n",
       "0    2025-10-29 06:03:59.617  2025-10-29 05:58:25.000       False  \n",
       "1    2025-10-29 06:03:59.637  2025-10-29 05:58:25.000       False  \n",
       "2    2025-10-29 06:03:59.584  2025-10-29 05:58:24.000       False  \n",
       "3    2025-10-29 06:03:59.606  2025-10-29 05:58:25.000       False  \n",
       "4    2025-10-29 06:03:59.577  2025-10-29 05:58:25.000       False  \n",
       "..                       ...                      ...         ...  \n",
       "393  2025-10-29 06:04:00.722  2025-10-29 05:58:26.000       False  \n",
       "394  2025-10-29 06:03:59.576  2025-10-29 05:58:25.000       False  \n",
       "395  2025-10-29 06:03:59.584  2025-10-29 05:58:24.000       False  \n",
       "396  2025-10-29 06:03:59.645  2025-10-29 05:58:25.000       False  \n",
       "397  2025-10-29 06:03:59.606  2025-10-29 05:58:24.000       False  \n",
       "\n",
       "[398 rows x 18 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "print(\"Querying all records from offline store...\")\n",
    "\n",
    "query = feature_group.athena_query()\n",
    "full_query = f'SELECT * FROM \"{query.table_name}\"'\n",
    "\n",
    "try:\n",
    "    query.run(\n",
    "        query_string=full_query,\n",
    "        output_location=f's3://{bucket}/queries/{feature_group_name}/full/'\n",
    "    )\n",
    "    query.wait()\n",
    "    athena_df = query.as_dataframe()\n",
    "    \n",
    "    print(f\"Total records in offline store: {len(athena_df)}\")\n",
    "    print(f\"Unique cars in offline store: {athena_df['car_name'].nunique()}\")\n",
    "    print(f\"Expected: {len(df)} records, {df['car_name'].nunique()} unique cars\")\n",
    "    \n",
    "    original_cars = set(df['car_name'].unique())\n",
    "    athena_cars = set(athena_df['car_name'].unique())\n",
    "    \n",
    "    missing = original_cars - athena_cars\n",
    "    \n",
    "    if len(missing) == 0:\n",
    "        print(\"\\nAll cars present in offline store\")\n",
    "    else:\n",
    "        print(f\"\\nMissing {len(missing)} cars in offline store:\")\n",
    "        for car in missing:\n",
    "            print(f\"  - {car}\")\n",
    "            original_record = df[df['car_name'] == car][['mpg', 'cylinders', 'model_year']].iloc[0]\n",
    "            print(f\"    Original: mpg={original_record['mpg']}, cyl={original_record['cylinders']}, year={original_record['model_year']}\")\n",
    "    \n",
    "    print(\"\\nOriginal dataframe:\")\n",
    "    display(df)\n",
    "    \n",
    "    print(\"\\nOffline store dataframe:\")\n",
    "    display(athena_df)\n",
    "    \n",
    "except Exception as e:\n",
    "    print(f\"Query failed: {e}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "ab35b4e3-53f9-46c6-a84e-6935e9eebcd1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-29T06:06:38.816492Z",
     "iopub.status.busy": "2025-10-29T06:06:38.816198Z",
     "iopub.status.idle": "2025-10-29T06:06:49.853885Z",
     "shell.execute_reply": "2025-10-29T06:06:49.853233Z",
     "shell.execute_reply.started": "2025-10-29T06:06:38.816470Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Querying: oldsmobile cutlass supreme\n",
      "Online record: {'ResponseMetadata': {'RequestId': '0c682acd-210c-4532-afeb-d5f6d9748cd0', 'HTTPStatusCode': 200, 'HTTPHeaders': {'x-amzn-requestid': '0c682acd-210c-4532-afeb-d5f6d9748cd0', 'content-type': 'application/json', 'content-length': '1208', 'date': 'Wed, 29 Oct 2025 06:06:38 GMT'}, 'RetryAttempts': 0}, 'Record': [{'FeatureName': 'mpg', 'ValueAsString': '17.0'}, {'FeatureName': 'cylinders', 'ValueAsString': '8'}, {'FeatureName': 'displacement', 'ValueAsString': '260.0'}, {'FeatureName': 'horsepower', 'ValueAsString': '110.0'}, {'FeatureName': 'weight', 'ValueAsString': '4060.0'}, {'FeatureName': 'acceleration', 'ValueAsString': '19.0'}, {'FeatureName': 'model_year', 'ValueAsString': '77'}, {'FeatureName': 'origin', 'ValueAsString': '1'}, {'FeatureName': 'car_name', 'ValueAsString': 'oldsmobile cutlass supreme'}, {'FeatureName': 'release_date', 'ValueAsString': '230157482.0'}, {'FeatureName': 'event_time', 'ValueAsString': '261693482.0'}, {'FeatureName': 'metadata_0', 'ValueAsString': 'empty'}, {'FeatureName': 'metadata_1', 'ValueAsString': 'empty'}, {'FeatureName': 'metadata_2', 'ValueAsString': 'empty'}, {'FeatureName': 'metadata_3', 'ValueAsString': 'empty'}]}\n",
      "Table: poc_1761717466_1761717466\n",
      "Offline record: Empty DataFrame\n",
      "Columns: [mpg, cylinders, displacement, horsepower, weight, acceleration, model_year, origin, car_name, release_date, event_time, metadata_0, metadata_1, metadata_2, metadata_3, write_time, api_invocation_time, is_deleted]\n",
      "Index: []\n",
      "\n",
      "Querying: chevrolet bel air\n",
      "Online record: {'ResponseMetadata': {'RequestId': 'ae46dacd-9fa1-454a-be7c-e29cae30dd77', 'HTTPStatusCode': 200, 'HTTPHeaders': {'x-amzn-requestid': 'ae46dacd-9fa1-454a-be7c-e29cae30dd77', 'content-type': 'application/json', 'content-length': '1199', 'date': 'Wed, 29 Oct 2025 06:06:44 GMT'}, 'RetryAttempts': 0}, 'Record': [{'FeatureName': 'mpg', 'ValueAsString': '15.0'}, {'FeatureName': 'cylinders', 'ValueAsString': '8'}, {'FeatureName': 'displacement', 'ValueAsString': '350.0'}, {'FeatureName': 'horsepower', 'ValueAsString': '145.0'}, {'FeatureName': 'weight', 'ValueAsString': '4440.0'}, {'FeatureName': 'acceleration', 'ValueAsString': '14.0'}, {'FeatureName': 'model_year', 'ValueAsString': '75'}, {'FeatureName': 'origin', 'ValueAsString': '1'}, {'FeatureName': 'car_name', 'ValueAsString': 'chevrolet bel air'}, {'FeatureName': 'release_date', 'ValueAsString': '166571106.0'}, {'FeatureName': 'event_time', 'ValueAsString': '198107106.0'}, {'FeatureName': 'metadata_0', 'ValueAsString': 'empty'}, {'FeatureName': 'metadata_1', 'ValueAsString': 'empty'}, {'FeatureName': 'metadata_2', 'ValueAsString': 'empty'}, {'FeatureName': 'metadata_3', 'ValueAsString': 'empty'}]}\n",
      "Table: poc_1761717466_1761717466\n",
      "Offline record: Empty DataFrame\n",
      "Columns: [mpg, cylinders, displacement, horsepower, weight, acceleration, model_year, origin, car_name, release_date, event_time, metadata_0, metadata_1, metadata_2, metadata_3, write_time, api_invocation_time, is_deleted]\n",
      "Index: []\n"
     ]
    }
   ],
   "source": [
    "def find_record(record_id):\n",
    "    print(f\"\\nQuerying: {record_id}\")\n",
    "    \n",
    "    online_record = featurestore_runtime.get_record(FeatureGroupName=feature_group_name, RecordIdentifierValueAsString=record_id)\n",
    "    print(f\"Online record: {online_record}\")\n",
    "\n",
    "    query = feature_group.athena_query()\n",
    "    table_name = query.table_name\n",
    "    print(f\"Table: {table_name}\")\n",
    "\n",
    "    sql_query = f\"\"\"\n",
    "    SELECT *\n",
    "    FROM \"{table_name}\"\n",
    "    where car_name = '{record_id}'\n",
    "    \"\"\"\n",
    "    query.run(query_string=sql_query, output_location=f's3://{bucket}/queries/{feature_group_name}/query_results/')\n",
    "    query.wait()\n",
    "    offline_record = query.as_dataframe()\n",
    "    print(f'Offline record: {offline_record}')\n",
    "\n",
    "find_record('oldsmobile cutlass supreme')\n",
    "find_record('chevrolet bel air')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "edd38261-cf55-4fbb-9628-469067845db7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-10-29T06:06:52.804547Z",
     "iopub.status.busy": "2025-10-29T06:06:52.804274Z",
     "iopub.status.idle": "2025-10-29T06:06:52.809610Z",
     "shell.execute_reply": "2025-10-29T06:06:52.808961Z",
     "shell.execute_reply.started": "2025-10-29T06:06:52.804524Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Summary\n",
      "================================================================================\n",
      "Feature Group: poc-1761717466\n",
      "Ingestion: 398 records in 2.65s\n",
      "S3 files: 370\n",
      "Online store: 305/305 found\n",
      "Offline store: 398 records, 289 unique cars\n"
     ]
    }
   ],
   "source": [
    "print(\"\\nSummary\")\n",
    "print(\"=\"*80)\n",
    "print(f\"Feature Group: {feature_group_name}\")\n",
    "print(f\"Ingestion: {len(df)} records in {ingestion_duration:.2f}s\")\n",
    "print(f\"S3 files: {len(parquet_files)}\")\n",
    "print(f\"Online store: {online_found}/{len(unique_cars)} found\")\n",
    "print(f\"Offline store: {len(athena_df)} records, {athena_df['car_name'].nunique()} unique cars\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "15e43bc4-edc0-45a4-ab5a-54f0282b6d06",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
